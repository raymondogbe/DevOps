QUESTION
The Nautilus DevOps team is working to deploy some tools in Kubernetes cluster. 
Some of the tools are licence based so that licence information needs to be stored securely within Kubernetes cluster. 
Therefore, the team wants to utilize Kubernetes secrets to store those secrets. Below you can find more details about the requirements:

We already have a secret key file news.txt under /opt location on jump host. 
Create a generic secret named news, it should contain the password/license-number present in news.txt file.

Also create a pod named secret-nautilus.

Configure pod's spec as container name should be secret-container-nautilus, image should be debian preferably with latest tag (remember to mention the tag with image). 
Use sleep command for container so that it remains in running state. Consume the created secret and mount it under /opt/games within the container.

To verify you can exec into the container secret-container-nautilus, to check the secret key under the mounted path /opt/games. 
Before hitting the Check button please make sure pod/pods are in running state, also validation can take some time to complete so keep patience.


SOLUTION
In this task, I am made to use the secret from a file and the secret key is in the /opt folder

To create a generic secret, use:
#kubectl create secret generic news --from-file=/opt/news.txt

To create a pod named secret-nautilus
#vi secret-nautilus.yaml

apiVersion: v1
kind: Pod
metadata:
  name: secret-nautilus
spec:
  volumes:
  - name: secret-volume
    secret:
      secretname: news
  containers:
  - image: debian:latest
    name: secret-container-nautilus
    command: ["/bin/sh"]
    args: ["-c", "sleep 600"]
    volumeMounts:
    - name: secret-volume
      mountPath: /opt/games
In the above manifest, make sure that the pod volume name and container volume name are the same.
#kubectl create -f secret-nautilus.yaml

To verify, check the container.
#kubectl exec -it secret-nautilus -- sh (kubectl exec -it <pod name> -- sh) if the pod has multiple containers, then add the name of the container (kubectl exec -it <pod name> <container-name> -- sh)

For the task above, it shows that you can mount secret as volume.
Remember that secret can also be called as environment variable in a pod
apiVersion: v1
kind: Pod
metadata:
  name: secret-nautilus
spec:
  containers:
  - image: debian:latest
    name: secret-container-nautilus
    command: ["/bin/sh"]
    args: ["-c", "sleep 600"]
    env:
    - name: myusername
      valueFrom
        secretKeyRef:
          name: <name of the secret>
          key: username (any data in the secret)
